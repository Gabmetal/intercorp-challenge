---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: spring-boot-demo
  name: spring-boot-demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: spring-boot-demo
  template:
    metadata:
      labels:
        app: spring-boot-demo
    spec:
      containers:
      - image: docker.io/maartensmeets/spring-boot-demo
        name: spring-boot-demo
        imagePullPolicy: Always
        resources:
          limits:
            cpu: "200m"
            memory: "200Mi"
        ports:
          - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: spring-boot-demo
  name: spring-boot-demo
spec:
  ports:
  - name: 8080-8080
    port: 8080
    protocol: TCP
    targetPort: 8080
  type: ClusterIP
  selector:
    app: spring-boot-demo
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: spring-boot-demo
  annotations: 
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - host: intercorpcllng.eastus2.cloudapp.azure.com
    http:
      paths:
      - path: /backend
        pathType: Prefix
        backend:
          serviceName: spring-boot-demo
          servicePort: 8080
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
    name: spring-boot-demo
spec:
    maxReplicas: 3
    minReplicas: 1
    scaleTargetRef:
        apiVersion: apps/v1
        kind: Deployment
        name: spring-boot-demo
    targetCPUUtilizationPercentage: 80